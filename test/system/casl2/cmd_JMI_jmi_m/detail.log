== test.log ==
----------------------------------------------------------------------
cmd_JMI_jmi_m: Test Success 2010-12-14 01:13:02
Detail in /home/kazubito/2010_12/yacasl2/test/system/casl2/cmd_JMI_jmi_m/detail.log
----------------------------------------------------------------------

== cmd ==
----------------------------------------------------------------------
cat ../../../../as/cmd/JMI/jmi_m.casl
../../../../casl2 -atd -M16 ../../../../as/cmd/JMI/jmi_m.casl
----------------------------------------------------------------------

== 0.txt ==
----------------------------------------------------------------------
;;; JMI adr OF:0/SF:1/ZF:0
MAIN    START
        LD      GR1,A
        AND     GR1,GR1
        JMI     TO
        LAD     GR1,0
        JUMP    FIN
TO      LAD     GR1,#FFFF
FIN     RET
A       DC      -1
        END

Assemble ../../../../as/cmd/JMI/jmi_m.casl (0)

Assemble ../../../../as/cmd/JMI/jmi_m.casl (1)
../../../../as/cmd/JMI/jmi_m.casl:    1:;;; JMI adr OF:0/SF:1/ZF:0
../../../../as/cmd/JMI/jmi_m.casl:    2:MAIN    START
../../../../as/cmd/JMI/jmi_m.casl:    3:        LD      GR1,A
	#0000	#1010
	#0001	#000C
../../../../as/cmd/JMI/jmi_m.casl:    4:        AND     GR1,GR1
	#0002	#3411
../../../../as/cmd/JMI/jmi_m.casl:    5:        JMI     TO
	#0003	#6100
	#0004	#0009
../../../../as/cmd/JMI/jmi_m.casl:    6:        LAD     GR1,0
	#0005	#1210
	#0006	#0000
../../../../as/cmd/JMI/jmi_m.casl:    7:        JUMP    FIN
	#0007	#6400
	#0008	#000B
../../../../as/cmd/JMI/jmi_m.casl:    8:TO      LAD     GR1,#FFFF
	#0009	#1210
	#000A	#FFFF
../../../../as/cmd/JMI/jmi_m.casl:    9:FIN     RET
	#000B	#8100
../../../../as/cmd/JMI/jmi_m.casl:   10:A       DC      -1
	#000C	#FFFF
../../../../as/cmd/JMI/jmi_m.casl:   11:        END

Executing machine codes
#0000: Register::::
#0000: GR0:      0 = #0000 = 0000000000000000
#0000: GR1:      0 = #0000 = 0000000000000000
#0000: GR2:      0 = #0000 = 0000000000000000
#0000: GR3:      0 = #0000 = 0000000000000000
#0000: GR4:      0 = #0000 = 0000000000000000
#0000: GR5:      0 = #0000 = 0000000000000000
#0000: GR6:      0 = #0000 = 0000000000000000
#0000: GR7:      0 = #0000 = 0000000000000000
#0000: SP:      16 = #0010 = 0000000000010000
#0000: PR:       0 = #0000 = 0000000000000000
#0000: FR (OF SF ZF): 000
#0000: Memory::::
#0000: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0000: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#0002: Register::::
#0002: GR0:      0 = #0000 = 0000000000000000
#0002: GR1:     -1 = #FFFF = 1111111111111111
#0002: GR2:      0 = #0000 = 0000000000000000
#0002: GR3:      0 = #0000 = 0000000000000000
#0002: GR4:      0 = #0000 = 0000000000000000
#0002: GR5:      0 = #0000 = 0000000000000000
#0002: GR6:      0 = #0000 = 0000000000000000
#0002: GR7:      0 = #0000 = 0000000000000000
#0002: SP:      16 = #0010 = 0000000000010000
#0002: PR:       2 = #0002 = 0000000000000010
#0002: FR (OF SF ZF): 010
#0002: Memory::::
#0002: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0002: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#0003: Register::::
#0003: GR0:      0 = #0000 = 0000000000000000
#0003: GR1:     -1 = #FFFF = 1111111111111111
#0003: GR2:      0 = #0000 = 0000000000000000
#0003: GR3:      0 = #0000 = 0000000000000000
#0003: GR4:      0 = #0000 = 0000000000000000
#0003: GR5:      0 = #0000 = 0000000000000000
#0003: GR6:      0 = #0000 = 0000000000000000
#0003: GR7:      0 = #0000 = 0000000000000000
#0003: SP:      16 = #0010 = 0000000000010000
#0003: PR:       3 = #0003 = 0000000000000011
#0003: FR (OF SF ZF): 010
#0003: Memory::::
#0003: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0003: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#0009: Register::::
#0009: GR0:      0 = #0000 = 0000000000000000
#0009: GR1:     -1 = #FFFF = 1111111111111111
#0009: GR2:      0 = #0000 = 0000000000000000
#0009: GR3:      0 = #0000 = 0000000000000000
#0009: GR4:      0 = #0000 = 0000000000000000
#0009: GR5:      0 = #0000 = 0000000000000000
#0009: GR6:      0 = #0000 = 0000000000000000
#0009: GR7:      0 = #0000 = 0000000000000000
#0009: SP:      16 = #0010 = 0000000000010000
#0009: PR:       9 = #0009 = 0000000000001001
#0009: FR (OF SF ZF): 010
#0009: Memory::::
#0009: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0009: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#000B: Register::::
#000B: GR0:      0 = #0000 = 0000000000000000
#000B: GR1:     -1 = #FFFF = 1111111111111111
#000B: GR2:      0 = #0000 = 0000000000000000
#000B: GR3:      0 = #0000 = 0000000000000000
#000B: GR4:      0 = #0000 = 0000000000000000
#000B: GR5:      0 = #0000 = 0000000000000000
#000B: GR6:      0 = #0000 = 0000000000000000
#000B: GR7:      0 = #0000 = 0000000000000000
#000B: SP:      16 = #0010 = 0000000000010000
#000B: PR:      11 = #000B = 0000000000001011
#000B: FR (OF SF ZF): 010
#000B: Memory::::
#000B: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#000B: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

----------------------------------------------------------------------

== 1.txt ==
----------------------------------------------------------------------
;;; JMI adr OF:0/SF:1/ZF:0
MAIN    START
        LD      GR1,A
        AND     GR1,GR1
        JMI     TO
        LAD     GR1,0
        JUMP    FIN
TO      LAD     GR1,#FFFF
FIN     RET
A       DC      -1
        END

Assemble ../../../../as/cmd/JMI/jmi_m.casl (0)

Assemble ../../../../as/cmd/JMI/jmi_m.casl (1)
../../../../as/cmd/JMI/jmi_m.casl:    1:;;; JMI adr OF:0/SF:1/ZF:0
../../../../as/cmd/JMI/jmi_m.casl:    2:MAIN    START
../../../../as/cmd/JMI/jmi_m.casl:    3:        LD      GR1,A
	#0000	#1010
	#0001	#000C
../../../../as/cmd/JMI/jmi_m.casl:    4:        AND     GR1,GR1
	#0002	#3411
../../../../as/cmd/JMI/jmi_m.casl:    5:        JMI     TO
	#0003	#6100
	#0004	#0009
../../../../as/cmd/JMI/jmi_m.casl:    6:        LAD     GR1,0
	#0005	#1210
	#0006	#0000
../../../../as/cmd/JMI/jmi_m.casl:    7:        JUMP    FIN
	#0007	#6400
	#0008	#000B
../../../../as/cmd/JMI/jmi_m.casl:    8:TO      LAD     GR1,#FFFF
	#0009	#1210
	#000A	#FFFF
../../../../as/cmd/JMI/jmi_m.casl:    9:FIN     RET
	#000B	#8100
../../../../as/cmd/JMI/jmi_m.casl:   10:A       DC      -1
	#000C	#FFFF
../../../../as/cmd/JMI/jmi_m.casl:   11:        END

Executing machine codes
#0000: Register::::
#0000: GR0:      0 = #0000 = 0000000000000000
#0000: GR1:      0 = #0000 = 0000000000000000
#0000: GR2:      0 = #0000 = 0000000000000000
#0000: GR3:      0 = #0000 = 0000000000000000
#0000: GR4:      0 = #0000 = 0000000000000000
#0000: GR5:      0 = #0000 = 0000000000000000
#0000: GR6:      0 = #0000 = 0000000000000000
#0000: GR7:      0 = #0000 = 0000000000000000
#0000: SP:      16 = #0010 = 0000000000010000
#0000: PR:       0 = #0000 = 0000000000000000
#0000: FR (OF SF ZF): 000
#0000: Memory::::
#0000: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0000: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#0002: Register::::
#0002: GR0:      0 = #0000 = 0000000000000000
#0002: GR1:     -1 = #FFFF = 1111111111111111
#0002: GR2:      0 = #0000 = 0000000000000000
#0002: GR3:      0 = #0000 = 0000000000000000
#0002: GR4:      0 = #0000 = 0000000000000000
#0002: GR5:      0 = #0000 = 0000000000000000
#0002: GR6:      0 = #0000 = 0000000000000000
#0002: GR7:      0 = #0000 = 0000000000000000
#0002: SP:      16 = #0010 = 0000000000010000
#0002: PR:       2 = #0002 = 0000000000000010
#0002: FR (OF SF ZF): 010
#0002: Memory::::
#0002: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0002: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#0003: Register::::
#0003: GR0:      0 = #0000 = 0000000000000000
#0003: GR1:     -1 = #FFFF = 1111111111111111
#0003: GR2:      0 = #0000 = 0000000000000000
#0003: GR3:      0 = #0000 = 0000000000000000
#0003: GR4:      0 = #0000 = 0000000000000000
#0003: GR5:      0 = #0000 = 0000000000000000
#0003: GR6:      0 = #0000 = 0000000000000000
#0003: GR7:      0 = #0000 = 0000000000000000
#0003: SP:      16 = #0010 = 0000000000010000
#0003: PR:       3 = #0003 = 0000000000000011
#0003: FR (OF SF ZF): 010
#0003: Memory::::
#0003: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0003: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#0009: Register::::
#0009: GR0:      0 = #0000 = 0000000000000000
#0009: GR1:     -1 = #FFFF = 1111111111111111
#0009: GR2:      0 = #0000 = 0000000000000000
#0009: GR3:      0 = #0000 = 0000000000000000
#0009: GR4:      0 = #0000 = 0000000000000000
#0009: GR5:      0 = #0000 = 0000000000000000
#0009: GR6:      0 = #0000 = 0000000000000000
#0009: GR7:      0 = #0000 = 0000000000000000
#0009: SP:      16 = #0010 = 0000000000010000
#0009: PR:       9 = #0009 = 0000000000001001
#0009: FR (OF SF ZF): 010
#0009: Memory::::
#0009: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#0009: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

#000B: Register::::
#000B: GR0:      0 = #0000 = 0000000000000000
#000B: GR1:     -1 = #FFFF = 1111111111111111
#000B: GR2:      0 = #0000 = 0000000000000000
#000B: GR3:      0 = #0000 = 0000000000000000
#000B: GR4:      0 = #0000 = 0000000000000000
#000B: GR5:      0 = #0000 = 0000000000000000
#000B: GR6:      0 = #0000 = 0000000000000000
#000B: GR7:      0 = #0000 = 0000000000000000
#000B: SP:      16 = #0010 = 0000000000010000
#000B: PR:      11 = #000B = 0000000000001011
#000B: FR (OF SF ZF): 010
#000B: Memory::::
#000B: adr : 0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 000A 000B 000C 000D 000E 000F
#000B: 0000: 1010 000C 3411 6100 0009 1210 0000 6400 000B 1210 FFFF 8100 FFFF 0000 0000 0000

----------------------------------------------------------------------

