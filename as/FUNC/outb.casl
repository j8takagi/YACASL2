;;; GR1に格納された値を、2進数値として表示
OUTB    START
        RPUSH
        LAD     GR2,2           ; GR2に2進数の「2」を格納。
        LAD     GR0,0           ; GR0 <- 0
        ST      GR0,LEN         ; LENの初期化
        AND     GR1,GR1         ; GR1をテスト
        JZE     ZINS            ; GR1が0の場合、ZINSにジャンプ
STI     CPL     GR1,GR2         ; ループ先頭。(GR1 < GR2)の場合は、ループ脱出
        JMI     STLST           ; ↓
        CALL    ODIVL           ; GR1とGR2の、商をGR0、剰余をGR1に格納
        LD      GR1,NCHAR,GR1   ; GR1を文字に変換
        CALL    STSTR           ; GR1をSTR領域に格納
        LD      GR1,GR0         ; GR0をGR1にコピー
        JUMP    STI             ; ループ終端
STLST   LD      GR1,NCHAR,GR1   ; GR1を文字に変換
        CALL    STSTR           ; GR1をSTR領域に格納
        JUMP    EMB             ; EMBにジャンプ
ZINS    LD      GR1,NCHAR       ; 「0」をSTR領域に格納
        CALL    STSTR           ; ↓
EMB     LD      GR1,NCHAR       ; GR0 <- '0'
EMLOOP  LD      GR2,LEN         ; GR2 <- LEN
        CPA     GR2,DIG         ; ループ先頭。(GR2 = DIG)の場合は、ループ脱出
        JZE     PRT             ; ↓
        CALL    STSTR           ; GR1をSTR領域に格納
        JUMP    EMLOOP          ; ループ終端
PRT     LD      GR2,LEN         ; GR2にLENの値を格納
        LAD     GR1,STR         ; GR1に文字列のアドレスを格納
        CALL    REV             ; 文字列を逆順に並べ替え
        OUT     STR,LEN         ; 文字列を出力
        RPOP
        RET
STR     DS      17
LEN     DS      1
NCHAR   DC      '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
DIG     DC      16        
        END
;; GR1をSTR領域に格納し、LENをインクリメント
STSTR   START
        PUSH    0,GR1
        PUSH    0,GR2
        LD      GR2,LEN         ; GR2にLENの値をロード
        ST      GR1,STR,GR2     ; STR+GR2 <- GR1
        LAD     GR2,1,GR2       ; GR2 <- GR2 + 1
        ST      GR2,LEN         ; LENにGR2を格納
        POP     GR2
        POP     GR1
        RET
        END
;;; GR1の値とGR2の値の、商をGR0、剰余をGR1に格納する
;;; 0〜65535の範囲の数値を扱う
ODIVL   START
        PUSH    0,GR2
        PUSH    0,GR3
        LAD     GR0,0           ; GR0の初期化。商
        ST      GR2,ODY         ; DYにGR2の初期値を保存
        LAD     GR3,1           ; GR3の初期化。対象ビットを表す
ODSL    CPL     GR2,GR1         ; ループ先頭。(GR3 > GR1)の場合、DLOOPへループ脱出
        JPL     ODLOOP          ; ↓
        SLL     GR3,1           ; GR3を1回左シフト
        SLL     GR2,1           ; GR2を1回左シフト
        JOV     ODYOV           ; オーバーフローの場合は、ODYOVにジャンプ
        JUMP    ODSL            ; ループ終端
ODYOV   SRL     GR2,1           ; GR2を1回右シフト
        LAD     GR2,#8000,GR2   ; GR2 <- GR2 + #8000
        SRL     GR3,1           ; GR3を1回右シフト
        JUMP    ODLPIN          ; ODLPINへジャンプ
ODLOOP  SRL     GR3,1           ; ループ先頭。GR3を1回右シフト
        JZE     ODFIN           ; (GR3= 0)の場合、ループ脱出
        SRL     GR2,1           ; GR2を1回右シフト
        CPL     GR1,ODY         ; (GR1 < ODY)の場合、ループ脱出
        JMI     ODFIN           ; ↓
        CPL     GR1,GR2         ; (GR1 < GR2)の場合、ループ先頭へジャンプ
        JMI     ODLOOP          ; ↓
ODLPIN  SUBL    GR1,GR2         ; GR1 <- GR1 - GR2
        ADDL    GR0,GR3         ; GR0 <- GR0 + GR3
        JUMP    ODLOOP          ; ループ終端
ODFIN   POP     GR3
        POP     GR2
        RET
ODY     DS      1
ODMB    DC      #8000        
        END
;; アドレスがGR1、長さがGR2の文字列を逆順に並べ替える
;; 例: 12345 -> 54321、54321- -> -12345
REV     START
        RPUSH
        LAD     GR3,0           ; GR3の初期化
RPU     CPL     GR3,GR2         ; ループ先頭。(GR3 = GR2)の場合、ループ脱出
        JZE     RNEXT           ; ↓
        LD      GR4,GR1         ; GR4にGR1の値をコピー
        ADDL    GR4,GR3         ; GR4 <- GR4 + GR3
        LD      GR5,0,GR4       ; GR5にアドレスGR4の値を格納
        PUSH    0,GR5           ; GR5をプッシュ
        LAD     GR3,1,GR3       ; GR3 <- GR3 + 1
        JUMP    RPU             ; ループ終端
RNEXT   LAD     GR3,0           ; GR3の初期化
RPO     CPL     GR3,GR2         ; ループ先頭。(GR3 = GR2)の場合、ループ脱出
        JZE     RFIN            ; ↓
        POP     GR5             ; GR5にポップ
        LD      GR4,GR1         ; GR4にGR1の値をコピー
        ADDL    GR4,GR3         ; GR4 <- GR4 + GR3
        ST      GR5,0,GR4       ; アドレスGR4にGR5の値を格納
        LAD     GR3,1,GR3       ; GR3 <- GR3 + 1
        JUMP    RPO             ; ループ終端
RFIN    RPOP
        RET
        END
