\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename yacasl2
@settitle YACASL2 -Linux上のCASL2処理系-
@c %**end of header

@copying
Copyright @copyright{} 2010 j8takagi
@end copying

@titlepage
@title

@c The following two commands start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c Output the table of contents at the beginning.
@contents

@insertcopying

@chapter YACASL2の概要

@cindex chapter, first

YACASL2は、Linux上で動作するオープンソースのCASL II処理系です。CASL IIは情報処理試験で用いられるアセンブラ言語で、次の資料により仕様が公開されています。

@quotation
@uref{http://www.jitec.ipa.go.jp/1_00topic/topic_20081027_hani_yougo.pdf, 試験で使用する情報処理用語・プログラム言語など（2008年10月版）}［PDFファイル］
別紙 1 アセンブラ言語の仕様
@end quotation

YACASL2は、CASL IIアセンブラ言語で記述されたファイルをアセンブルし、仮想マシンCOMET II上で実行します。アセンブルと実行は、連続で行うことも別々に行うことも可能です。
YACASL2の動作はCASL IIの仕様に準拠しているため、情報処理試験の問題をはじめ各種参考書やサイトに記載されたCASL IIのプログラムをそのままアセンブルして実行できます。また、本パッケージ中にCASL IIのサンプルプログラムが多数収録されています。

YACASL2は、「ふつうの処理系」として動作します。ほかの多くのCASL IIエミュレーターと違い、デバッガーとして動作したり、コンピューター内部の模式図を表示したりすることはありません。そのかわり、YACASL2は、次のような動作内容をすべてテキストで出力します。

@itemize @bullet

@item
ラベルとアドレスの対応

@item
アセンブラ結果

@item
実行時のレジスタの内容

@item
実行時のメモリの内容
@end itemize

出力された動作内容は、GNU/Linuxのさまざまなツール、たとえば@command{head}、@command{tail}、@command{grep}、@command{diff}などを使って解析できます。

@chapter YACASL2のインストール

YACASL2をインストールするには、Linux上で次の作業が必要です。

@enumerate

@item
@file{yacasl2.tar.gz}のダウンロード

@item
@file{yacasl2.tar.gz}の展開

@item
@command{casl2}、@command{comet2}、@command{dumpword}のビルド

@item
レグレッションテスト
@end enumerate

@unnumberedsec 要件
YACASL2は、Linux上で動作します。インストール時に、@command{tar}、@command{gcc}、@command{make}が必要です。

現在動作を確認しているのは、次のディストリビューションです。

@itemize @bullet

@item
Ubuntu Linux 9.04

@item
Ubuntu Linux 8.04

@item
Vine Linux 4.2
@end itemize

@section @file{yacasl2.tar.gz}のダウンロード

@verbatim
$ cd
$ wget
@end verbatim

@section @file{yacasl2.tar.gz}の展開

@verbatim
$ tar xvzf yacasl2.tar.gz
@end verbatim

@section @command{casl2}、@command{comet2}、@command{dumpword}のビルド

@verbatim
$ cd yacasl2
$ make
@end verbatim

@section レグレッションテスト

@verbatim
$ make check
@end verbatim

@bye
