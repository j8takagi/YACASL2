;;; -32767〜32767の範囲にある正数のかけ算（筆算方式）を行う
;;; 入力 GR1:被乗数 GR2:乗数
;;; 出力 GR0:積
;;; 被乗数または乗数が-32768の場合は、オーバーフロー
;;; 積が-32767未満または32767より大きい場合は、GR0は積の下位16ビットになり、オーバーフロー
MULA    START
        RPUSH
        XOR     GR0,GR0         ; 積
        AND     GR1,GR1         ; (GR1 = 0)の場合、終了
        JZE     FIN             ; ↓
        AND     GR2,GR2         ; (GR2 = 0)の場合、終了
        JZE     FIN             ; ↓
        LAD     GR3,1           ; 対象ビット
        XOR     GR4,GR4         ; マイナスフラグ
CHK1    AND     GR1,GR1         ; (GR1 > 0)の場合は、CHK2へジャンプ
        JPL     CHK2            ; ↓
        XOR     GR1,ALLON       ; GR1の正負を反転
        ADDA    GR1,ONE         ; ↓
        JOV     FIN             ; (GR1 = -32768)の場合は終了
        XOR     GR4,ONE         ; GR4 <- 1
CHK2    AND     GR2,GR2         ; (GR1 > 0)の場合は、LOOPへジャンプ
        JPL     MUL             ; ↓
        XOR     GR2,ALLON       ; GR2の正負を反転
        ADDA    GR2,ONE         ; ↓
        JOV     FIN             ; (GR2 = -32768)の場合は終了
        XOR     GR4,ONE         ; マイナスフラグを反転
MUL     CALL    MULL            ; GR0 <- GR1 * GR2
        JOV     FIN
        AND     GR0,GR0
        JMI     OV
MIN     AND     GR4,GR4         ; マイナスフラグがオフの場合、終了
        JZE     FIN             ; ↓
        XOR     GR0,ALLON       ; GR1の正負を反転
        ADDA    GR0,ONE         ; ↓
        JUMP    FIN
OV      ADDL    GR0,=#8000
FIN     RPOP
        RET
ONE     DC      1
ALLON   DC      #FFFF
        END
