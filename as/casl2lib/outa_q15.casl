;; GR1に格納された値を、10進数の符号付き小数値として表示
OUTAQ15 START
        RPUSH
        LAD     GR2,10          ; GR2に10進数の「10」を格納
        XOR     GR4,GR4         ; 整数値の長さ
        XOR     GR3,GR3         ; 出力する文字を一時的に格納
        AND     GR1,GR1         ; GR1の符号をチェック
        JPL     STDN            ; ↓ GR1が正数の場合、STDNにジャンプ
        LD      GR3,='-'        ; ↓ GR1が負数の場合、「-」をSTR領域に格納
        ST      GR3,STR         ; ↓ ↓
        LAD     GR4,1,GR4       ; ↓ ↓ GR4 <- GR4 + 1
        CPA     GR1,=#8000      ; (GR1 = #8000)の場合、MINONEへジャンプ
        JZE     MINONE          ; ↓
        CALL    ABS             ; GR1を正数に変換
STDN    LD      GR3,='0'        ; 「0」をSTR領域に格納
        ST      GR3,STR,GR4     ; ↓
        AND     GR1,GR1         ; GR1が0の場合、PRTへジャンプ
        JZE     PRT             ; ↓
        LAD     GR4,1,GR4       ; ↓ GR4 <- GR4 + 1
        LD      GR3,='.'        ; 「.」をSTR領域に格納
        ST      GR3,STR,GR4     ; ↓
        LAD     GR4,1,GR4       ; ↓ GR4 <- GR4 + 1
        SLL     GR1,1           ; GR1を1回左シフト
;; GR1の内容を小数値と見なし、10進数の文字列に変換してSTRに格納
TODIG   AND     GR1,GR1         ; GR1が0の場合は、ループを脱出
        JZE     PRT             ; ↓
        CALL    MULL            ; GR1とGR2の、積をGR1、オーバーフロー値をGR3に格納
        LD      GR1,GR0         ; GR0をGR1にコピー
        ADDA    GR3,='0'        ; GR1を文字に変換
        ST      GR3,STR,GR4     ; (STR + GR4) <- GR1
        LAD     GR4,1,GR4       ; GR4 <- GR4 + 1
        JUMP    TODIG           ; ループ
;; GR1 = -1の場合
MINONE  LD      GR1,='1'        ; GR1が#8000の場合、-1を出力
        ST      GR1,STR,GR4     ; (STR + GR4) <- GR1
        LAD     GR4,1,GR4       ; GR4 <- GR4 + 1
        JUMP    PRT             ; ↓
;; 値を出力
PRT     ST      GR4,LEN         ; LEN <- GR4
        OUT     STR,LEN         ; ↓
        RPOP
        RET
STR     DS      20
LEN     DS      1
        END

