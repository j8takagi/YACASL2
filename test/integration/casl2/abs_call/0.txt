../../../../casl2 -sla ../../../../as/FUNC/abs_call.casl ../../../../as/FUNC/abs.casl ../../../../as/FUNC/outa.casl

Assemble ../../../../as/FUNC/abs_call.casl (0)
../../../../as/FUNC/abs_call.casl:    1:;;; ABSを呼び出す
../../../../as/FUNC/abs_call.casl:    2:;;; casl2 abs_call.casl abs.casl outa.casl
../../../../as/FUNC/abs_call.casl:    3:MAIN    START
../../../../as/FUNC/abs_call.casl:    4:        LAD     GR2,0
../../../../as/FUNC/abs_call.casl:    5:MLOOP   CPA     GR2,MLEN
../../../../as/FUNC/abs_call.casl:    6:        JZE     MFIN
../../../../as/FUNC/abs_call.casl:    7:        LD      GR1,MVAL,GR2
../../../../as/FUNC/abs_call.casl:    8:        CALL    ABS
../../../../as/FUNC/abs_call.casl:    9:        CALL    OUTA
../../../../as/FUNC/abs_call.casl:   10:        LAD     GR2,1,GR2
../../../../as/FUNC/abs_call.casl:   11:        JUMP    MLOOP
../../../../as/FUNC/abs_call.casl:   12:MFIN    RET
../../../../as/FUNC/abs_call.casl:   13:MVAL    DC      12,-12,1,-1,32767,-32767,0,-32768
../../../../as/FUNC/abs_call.casl:   14:MLEN    DC      8
../../../../as/FUNC/abs_call.casl:   15:        END

Assemble ../../../../as/FUNC/abs.casl (0)
../../../../as/FUNC/abs.casl:    1:;;; GR1を絶対値に変換する
../../../../as/FUNC/abs.casl:    2:ABS     START
../../../../as/FUNC/abs.casl:    3:        AND     GR1,GR1
../../../../as/FUNC/abs.casl:    4:        JPL     ABSFIN
../../../../as/FUNC/abs.casl:    5:        JZE     ABSFIN
../../../../as/FUNC/abs.casl:    6:        XOR     GR1,=#FFFF
../../../../as/FUNC/abs.casl:    7:        LAD     GR1,1,GR1
../../../../as/FUNC/abs.casl:    8:ABSFIN  RET
../../../../as/FUNC/abs.casl:    9:        END

Assemble ../../../../as/FUNC/outa.casl (0)
../../../../as/FUNC/outa.casl:    1:;;; GR1に格納された値を、10進数の整数値（-32768〜32767）として表示
../../../../as/FUNC/outa.casl:    2:OUTA    START
../../../../as/FUNC/outa.casl:    3:        RPUSH
../../../../as/FUNC/outa.casl:    4:        LAD     GR2,10          ; GR2に10進数の「10」を格納。
../../../../as/FUNC/outa.casl:    5:        LAD     GR0,0           ; GR0 <- 0
../../../../as/FUNC/outa.casl:    6:        LAD     GR4,0           ; 負数フラグ。GR1が負数の場合、GR4は1
../../../../as/FUNC/outa.casl:    7:        LAD     GR5,0           ; 整数値の長さ
../../../../as/FUNC/outa.casl:    8:        AND     GR1,GR1         ; GR1をテスト
../../../../as/FUNC/outa.casl:    9:        JZE     ZPRT            ; GR1が0の場合、ZPRTにジャンプ
../../../../as/FUNC/outa.casl:   10:        JPL     STI             ; GR1が正数の場合、STIにジャンプ
../../../../as/FUNC/outa.casl:   11:        LAD     GR4,1           ; GR1が負数の場合、GR4をオン
../../../../as/FUNC/outa.casl:   12:        CALL    OABS            ;                  GR1を正数に変換
../../../../as/FUNC/outa.casl:   13:STI     CPL     GR1,GR2         ; ループ先頭。(GR1 < GR2)の場合は、ループ脱出
../../../../as/FUNC/outa.casl:   14:        JMI     STLST           ; ↓
../../../../as/FUNC/outa.casl:   15:        CALL    ODIVL           ; GR1とGR2の、商をGR0、剰余をGR3に格納
../../../../as/FUNC/outa.casl:   16:        LD      GR1,GR3         ; GR1にGR3をコピー
../../../../as/FUNC/outa.casl:   17:        LD      GR1,NCHAR,GR1   ; GR1を文字に変換
../../../../as/FUNC/outa.casl:   18:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
../../../../as/FUNC/outa.casl:   19:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
../../../../as/FUNC/outa.casl:   20:        LD      GR1,GR0         ; GR0をGR1にコピー
../../../../as/FUNC/outa.casl:   21:        JUMP    STI             ; ループ終端
../../../../as/FUNC/outa.casl:   22:STLST   LD      GR1,NCHAR,GR1   ; GR1を文字に変換
../../../../as/FUNC/outa.casl:   23:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
../../../../as/FUNC/outa.casl:   24:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
../../../../as/FUNC/outa.casl:   25:        AND     GR4,GR4         ; 正数の場合
../../../../as/FUNC/outa.casl:   26:        JZE     PRT             ; ↓
../../../../as/FUNC/outa.casl:   27:        LD      GR1,='-'        ; 負数の場合、「-」をSTR領域に格納
../../../../as/FUNC/outa.casl:   28:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
../../../../as/FUNC/outa.casl:   29:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
../../../../as/FUNC/outa.casl:   30:        JUMP    PRT             ; PRTにジャンプ
../../../../as/FUNC/outa.casl:   31:ZPRT    LD      GR1,NCHAR       ; 「0」をSTR領域に格納
../../../../as/FUNC/outa.casl:   32:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
../../../../as/FUNC/outa.casl:   33:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
../../../../as/FUNC/outa.casl:   34:PRT     ST      GR5,LEN         ; LEN <- GR5
../../../../as/FUNC/outa.casl:   35:        LD      GR2,LEN         ; GR2にLENの値を格納
../../../../as/FUNC/outa.casl:   36:        LAD     GR1,STR         ; GR1に文字列のアドレスを格納
../../../../as/FUNC/outa.casl:   37:        CALL    REV             ; 文字列を逆順に並べ替え
../../../../as/FUNC/outa.casl:   38:        OUT     STR,LEN         ; 文字列を出力
../../../../as/FUNC/outa.casl:   39:        RPOP
../../../../as/FUNC/outa.casl:   40:        RET
../../../../as/FUNC/outa.casl:   41:STR     DS      17
../../../../as/FUNC/outa.casl:   42:LEN     DS      1
../../../../as/FUNC/outa.casl:   43:NCHAR   DC      '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
../../../../as/FUNC/outa.casl:   44:        END
../../../../as/FUNC/outa.casl:   45:;;; GR1の値とGR2の値の、商をGR0、剰余をGR3に格納する
../../../../as/FUNC/outa.casl:   46:;;; 0〜65535の範囲の数値を扱う
../../../../as/FUNC/outa.casl:   47:ODIVL   START
../../../../as/FUNC/outa.casl:   48:        PUSH    0,GR1
../../../../as/FUNC/outa.casl:   49:        PUSH    0,GR2
../../../../as/FUNC/outa.casl:   50:        PUSH    0,GR4
../../../../as/FUNC/outa.casl:   51:        AND     GR2,GR2         ; GR2が0の場合、ODFINへジャンプ
../../../../as/FUNC/outa.casl:   52:        JZE     ODFIN           ; ↓
../../../../as/FUNC/outa.casl:   53:        ST      GR2,ODY         ; ODYにGR2の初期値を保存
../../../../as/FUNC/outa.casl:   54:        LAD     GR0,0           ; GR0の初期化
../../../../as/FUNC/outa.casl:   55:        LAD     GR3,0           ; GR3の初期化
../../../../as/FUNC/outa.casl:   56:        LAD     GR4,1           ; GR4の初期化。対象ビットを表す
../../../../as/FUNC/outa.casl:   57:ODSL    CPL     GR2,GR1         ; ループ先頭。(GR2 > GR1)の場合、ODLOOPへループ脱出
../../../../as/FUNC/outa.casl:   58:        JPL     ODLOOP          ; ↓
../../../../as/FUNC/outa.casl:   59:        SLL     GR4,1           ; GR4を1回左シフト
../../../../as/FUNC/outa.casl:   60:        SLL     GR2,1           ; GR2を1回左シフト
../../../../as/FUNC/outa.casl:   61:        JOV     ODYOV           ; オーバーフローの場合は、ODYOVにジャンプ
../../../../as/FUNC/outa.casl:   62:        JUMP    ODSL            ; ループ終端
../../../../as/FUNC/outa.casl:   63:ODYOV   SRL     GR2,1
../../../../as/FUNC/outa.casl:   64:        LAD     GR2,#8000,GR2
../../../../as/FUNC/outa.casl:   65:        SRL     GR4,1
../../../../as/FUNC/outa.casl:   66:        JUMP    ODLPIN
../../../../as/FUNC/outa.casl:   67:ODLOOP  SRL     GR4,1           ; ループ先頭。GR4を1回右シフト
../../../../as/FUNC/outa.casl:   68:        JZE     ODFIN           ; (GR4 = 0)の場合、ループ脱出
../../../../as/FUNC/outa.casl:   69:        SRL     GR2,1           ; GR2を1回右シフト
../../../../as/FUNC/outa.casl:   70:        CPL     GR1,ODY         ; (GR1 < ODY)の場合、ループ脱出
../../../../as/FUNC/outa.casl:   71:        JMI     ODFIN           ; ↓
../../../../as/FUNC/outa.casl:   72:        CPL     GR1,GR2         ; (GR1 < GR2)の場合、ループ先頭へジャンプ
../../../../as/FUNC/outa.casl:   73:        JMI     ODLOOP          ; ↓
../../../../as/FUNC/outa.casl:   74:ODLPIN  SUBL    GR1,GR2         ; GR1 <- GR1 - GR2
../../../../as/FUNC/outa.casl:   75:        ADDL    GR0,GR4         ; GR0 <- GR0 + GR4
../../../../as/FUNC/outa.casl:   76:        JUMP    ODLOOP          ; ループ終端
../../../../as/FUNC/outa.casl:   77:ODFIN   LD      GR3,GR1
../../../../as/FUNC/outa.casl:   78:        POP	GR4
../../../../as/FUNC/outa.casl:   79:        POP     GR2
../../../../as/FUNC/outa.casl:   80:        POP     GR1
../../../../as/FUNC/outa.casl:   81:        RET
../../../../as/FUNC/outa.casl:   82:ODY     DS      1        
../../../../as/FUNC/outa.casl:   83:        END
../../../../as/FUNC/outa.casl:   84:;; アドレスがGR1、長さがGR2の文字列を逆順に並べ替える
../../../../as/FUNC/outa.casl:   85:;; 例: 12345 -> 54321、54321- -> -12345
../../../../as/FUNC/outa.casl:   86:REV     START
../../../../as/FUNC/outa.casl:   87:        RPUSH
../../../../as/FUNC/outa.casl:   88:        LAD     GR3,0           ; GR3の初期化
../../../../as/FUNC/outa.casl:   89:RPU     CPL     GR3,GR2         ; ループ先頭。(GR3 = GR2)の場合、ループ脱出
../../../../as/FUNC/outa.casl:   90:        JZE     RNEXT           ; ↓
../../../../as/FUNC/outa.casl:   91:        LD      GR4,GR1         ; GR4にGR1の値をコピー
../../../../as/FUNC/outa.casl:   92:        ADDL    GR4,GR3         ; GR4 <- GR4 + GR3
../../../../as/FUNC/outa.casl:   93:        LD      GR5,0,GR4       ; GR5にアドレスGR4の値を格納
../../../../as/FUNC/outa.casl:   94:        PUSH    0,GR5           ; GR5をプッシュ
../../../../as/FUNC/outa.casl:   95:        LAD     GR3,1,GR3       ; GR3 <- GR3 + 1
../../../../as/FUNC/outa.casl:   96:        JUMP    RPU             ; ループ終端
../../../../as/FUNC/outa.casl:   97:RNEXT   LAD     GR3,0           ; GR3の初期化
../../../../as/FUNC/outa.casl:   98:RPO     CPL     GR3,GR2         ; ループ先頭。(GR3 = GR2)の場合、ループ脱出
../../../../as/FUNC/outa.casl:   99:        JZE     RFIN            ; ↓
../../../../as/FUNC/outa.casl:  100:        POP     GR5             ; GR5にポップ
../../../../as/FUNC/outa.casl:  101:        LD      GR4,GR1         ; GR4にGR1の値をコピー
../../../../as/FUNC/outa.casl:  102:        ADDL    GR4,GR3         ; GR4 <- GR4 + GR3
../../../../as/FUNC/outa.casl:  103:        ST      GR5,0,GR4       ; アドレスGR4にGR5の値を格納
../../../../as/FUNC/outa.casl:  104:        LAD     GR3,1,GR3       ; GR3 <- GR3 + 1
../../../../as/FUNC/outa.casl:  105:        JUMP    RPO             ; ループ終端
../../../../as/FUNC/outa.casl:  106:RFIN    RPOP
../../../../as/FUNC/outa.casl:  107:        RET
../../../../as/FUNC/outa.casl:  108:        END
../../../../as/FUNC/outa.casl:  109:;; GR1の値を絶対値に変換する。GR1にはマイナスの数値が格納されていると想定。
../../../../as/FUNC/outa.casl:  110:;; 例: -10 -> 10, -20 -> 20
../../../../as/FUNC/outa.casl:  111:OABS    START
../../../../as/FUNC/outa.casl:  112:        XOR     GR1,=#FFFF      ; GR1の値を反転
../../../../as/FUNC/outa.casl:  113:        LAD     GR1,1,GR1       ; GR1 <- GR1 + 1
../../../../as/FUNC/outa.casl:  114:        RET
../../../../as/FUNC/outa.casl:  115:        END

Label::::
ODIVL.ODY ---> #00FB
ABS.ABSFIN ---> #0023
OUTA.LEN ---> #009C
ODIVL.ODLOOP ---> #00E5
ODIVL.ODLPIN ---> #00F2
OUTA.ZPRT ---> #0063
ABS ---> #001A
OUTA.STI ---> #0043
MAIN.MLOOP ---> #0002
REV.RFIN ---> #0127
OUTA.STR ---> #008B
ODIVL.ODFIN ---> #00F6
REV.RPO ---> #011B
REV.RPU ---> #010C
ODIVL.ODYOV ---> #00DD
REV ---> #00FC
REV.RNEXT ---> #0119
OABS ---> #012F
OUTA.NCHAR ---> #009D
MAIN.MFIN ---> #0010
ODIVL.ODSL ---> #00D2
OUTA.STLST ---> #0052
MAIN ---> #0000
MAIN.MLEN ---> #0019
ODIVL ---> #00C1
MAIN.MVAL ---> #0011
OUTA ---> #0024
OUTA.PRT ---> #0069

Assemble ../../../../as/FUNC/abs_call.casl (1)
../../../../as/FUNC/abs_call.casl:    1:;;; ABSを呼び出す
../../../../as/FUNC/abs_call.casl:    2:;;; casl2 abs_call.casl abs.casl outa.casl
../../../../as/FUNC/abs_call.casl:    3:MAIN    START
../../../../as/FUNC/abs_call.casl:    4:        LAD     GR2,0
	#0000	#1220
	#0001	#0000
../../../../as/FUNC/abs_call.casl:    5:MLOOP   CPA     GR2,MLEN
	#0002	#4020
	#0003	#0019
../../../../as/FUNC/abs_call.casl:    6:        JZE     MFIN
	#0004	#6300
	#0005	#0010
../../../../as/FUNC/abs_call.casl:    7:        LD      GR1,MVAL,GR2
	#0006	#1012
	#0007	#0011
../../../../as/FUNC/abs_call.casl:    8:        CALL    ABS
	#0008	#8000
	#0009	#001A
../../../../as/FUNC/abs_call.casl:    9:        CALL    OUTA
	#000A	#8000
	#000B	#0024
../../../../as/FUNC/abs_call.casl:   10:        LAD     GR2,1,GR2
	#000C	#1222
	#000D	#0001
../../../../as/FUNC/abs_call.casl:   11:        JUMP    MLOOP
	#000E	#6400
	#000F	#0002
../../../../as/FUNC/abs_call.casl:   12:MFIN    RET
	#0010	#8100
../../../../as/FUNC/abs_call.casl:   13:MVAL    DC      12,-12,1,-1,32767,-32767,0,-32768
	#0011	#000C
	#0012	#FFF4
	#0013	#0001
	#0014	#FFFF
	#0015	#7FFF
	#0016	#8001
	#0017	#0000
	#0018	#8000
../../../../as/FUNC/abs_call.casl:   14:MLEN    DC      8
	#0019	#0008
../../../../as/FUNC/abs_call.casl:   15:        END

Assemble ../../../../as/FUNC/abs.casl (1)
../../../../as/FUNC/abs.casl:    1:;;; GR1を絶対値に変換する
../../../../as/FUNC/abs.casl:    2:ABS     START
../../../../as/FUNC/abs.casl:    3:        AND     GR1,GR1
	#001A	#3411
../../../../as/FUNC/abs.casl:    4:        JPL     ABSFIN
	#001B	#6500
	#001C	#0023
../../../../as/FUNC/abs.casl:    5:        JZE     ABSFIN
	#001D	#6300
	#001E	#0023
../../../../as/FUNC/abs.casl:    6:        XOR     GR1,=#FFFF
	#0134	#FFFF
	#001F	#3210
	#0020	#0134
../../../../as/FUNC/abs.casl:    7:        LAD     GR1,1,GR1
	#0021	#1211
	#0022	#0001
../../../../as/FUNC/abs.casl:    8:ABSFIN  RET
	#0023	#8100
../../../../as/FUNC/abs.casl:    9:        END

Assemble ../../../../as/FUNC/outa.casl (1)
../../../../as/FUNC/outa.casl:    1:;;; GR1に格納された値を、10進数の整数値（-32768〜32767）として表示
../../../../as/FUNC/outa.casl:    2:OUTA    START
../../../../as/FUNC/outa.casl:    3:        RPUSH
	#0024	#7001
	#0025	#0000
	#0026	#7002
	#0027	#0000
	#0028	#7003
	#0029	#0000
	#002A	#7004
	#002B	#0000
	#002C	#7005
	#002D	#0000
	#002E	#7006
	#002F	#0000
	#0030	#7007
	#0031	#0000
../../../../as/FUNC/outa.casl:    4:        LAD     GR2,10          ; GR2に10進数の「10」を格納。
	#0032	#1220
	#0033	#000A
../../../../as/FUNC/outa.casl:    5:        LAD     GR0,0           ; GR0 <- 0
	#0034	#1200
	#0035	#0000
../../../../as/FUNC/outa.casl:    6:        LAD     GR4,0           ; 負数フラグ。GR1が負数の場合、GR4は1
	#0036	#1240
	#0037	#0000
../../../../as/FUNC/outa.casl:    7:        LAD     GR5,0           ; 整数値の長さ
	#0038	#1250
	#0039	#0000
../../../../as/FUNC/outa.casl:    8:        AND     GR1,GR1         ; GR1をテスト
	#003A	#3411
../../../../as/FUNC/outa.casl:    9:        JZE     ZPRT            ; GR1が0の場合、ZPRTにジャンプ
	#003B	#6300
	#003C	#0063
../../../../as/FUNC/outa.casl:   10:        JPL     STI             ; GR1が正数の場合、STIにジャンプ
	#003D	#6500
	#003E	#0043
../../../../as/FUNC/outa.casl:   11:        LAD     GR4,1           ; GR1が負数の場合、GR4をオン
	#003F	#1240
	#0040	#0001
../../../../as/FUNC/outa.casl:   12:        CALL    OABS            ;                  GR1を正数に変換
	#0041	#8000
	#0042	#012F
../../../../as/FUNC/outa.casl:   13:STI     CPL     GR1,GR2         ; ループ先頭。(GR1 < GR2)の場合は、ループ脱出
	#0043	#4512
../../../../as/FUNC/outa.casl:   14:        JMI     STLST           ; ↓
	#0044	#6100
	#0045	#0052
../../../../as/FUNC/outa.casl:   15:        CALL    ODIVL           ; GR1とGR2の、商をGR0、剰余をGR3に格納
	#0046	#8000
	#0047	#00C1
../../../../as/FUNC/outa.casl:   16:        LD      GR1,GR3         ; GR1にGR3をコピー
	#0048	#1413
../../../../as/FUNC/outa.casl:   17:        LD      GR1,NCHAR,GR1   ; GR1を文字に変換
	#0049	#1011
	#004A	#009D
../../../../as/FUNC/outa.casl:   18:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
	#004B	#1115
	#004C	#008B
../../../../as/FUNC/outa.casl:   19:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
	#004D	#1255
	#004E	#0001
../../../../as/FUNC/outa.casl:   20:        LD      GR1,GR0         ; GR0をGR1にコピー
	#004F	#1410
../../../../as/FUNC/outa.casl:   21:        JUMP    STI             ; ループ終端
	#0050	#6400
	#0051	#0043
../../../../as/FUNC/outa.casl:   22:STLST   LD      GR1,NCHAR,GR1   ; GR1を文字に変換
	#0052	#1011
	#0053	#009D
../../../../as/FUNC/outa.casl:   23:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
	#0054	#1115
	#0055	#008B
../../../../as/FUNC/outa.casl:   24:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
	#0056	#1255
	#0057	#0001
../../../../as/FUNC/outa.casl:   25:        AND     GR4,GR4         ; 正数の場合
	#0058	#3444
../../../../as/FUNC/outa.casl:   26:        JZE     PRT             ; ↓
	#0059	#6300
	#005A	#0069
../../../../as/FUNC/outa.casl:   27:        LD      GR1,='-'        ; 負数の場合、「-」をSTR領域に格納
	#0135	#002D
	#005B	#1010
	#005C	#0135
../../../../as/FUNC/outa.casl:   28:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
	#005D	#1115
	#005E	#008B
../../../../as/FUNC/outa.casl:   29:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
	#005F	#1255
	#0060	#0001
../../../../as/FUNC/outa.casl:   30:        JUMP    PRT             ; PRTにジャンプ
	#0061	#6400
	#0062	#0069
../../../../as/FUNC/outa.casl:   31:ZPRT    LD      GR1,NCHAR       ; 「0」をSTR領域に格納
	#0063	#1010
	#0064	#009D
../../../../as/FUNC/outa.casl:   32:        ST      GR1,STR,GR5     ; (STR + GR5) <- GR1
	#0065	#1115
	#0066	#008B
../../../../as/FUNC/outa.casl:   33:        LAD     GR5,1,GR5       ; GR5 <- GR5 + 1
	#0067	#1255
	#0068	#0001
../../../../as/FUNC/outa.casl:   34:PRT     ST      GR5,LEN         ; LEN <- GR5
	#0069	#1150
	#006A	#009C
../../../../as/FUNC/outa.casl:   35:        LD      GR2,LEN         ; GR2にLENの値を格納
	#006B	#1020
	#006C	#009C
../../../../as/FUNC/outa.casl:   36:        LAD     GR1,STR         ; GR1に文字列のアドレスを格納
	#006D	#1210
	#006E	#008B
../../../../as/FUNC/outa.casl:   37:        CALL    REV             ; 文字列を逆順に並べ替え
	#006F	#8000
	#0070	#00FC
../../../../as/FUNC/outa.casl:   38:        OUT     STR,LEN         ; 文字列を出力
	#0071	#7001
	#0072	#0000
	#0073	#7002
	#0074	#0000
	#0075	#1210
	#0076	#008B
	#0077	#1020
	#0078	#009C
	#0079	#F000
	#007A	#0002
	#007B	#1210
	#007C	#0136
	#0136	#000A
	#007D	#1220
	#007E	#0001
	#007F	#F000
	#0080	#0002
	#0081	#7120
	#0082	#7110
../../../../as/FUNC/outa.casl:   39:        RPOP
	#0083	#7170
	#0084	#7160
	#0085	#7150
	#0086	#7140
	#0087	#7130
	#0088	#7120
	#0089	#7110
../../../../as/FUNC/outa.casl:   40:        RET
	#008A	#8100
../../../../as/FUNC/outa.casl:   41:STR     DS      17
	#008B	#0000
	#008C	#0000
	#008D	#0000
	#008E	#0000
	#008F	#0000
	#0090	#0000
	#0091	#0000
	#0092	#0000
	#0093	#0000
	#0094	#0000
	#0095	#0000
	#0096	#0000
	#0097	#0000
	#0098	#0000
	#0099	#0000
	#009A	#0000
	#009B	#0000
../../../../as/FUNC/outa.casl:   42:LEN     DS      1
	#009C	#0000
../../../../as/FUNC/outa.casl:   43:NCHAR   DC      '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
	#009D	#0030
	#009E	#0031
	#009F	#0032
	#00A0	#0033
	#00A1	#0034
	#00A2	#0035
	#00A3	#0036
	#00A4	#0037
	#00A5	#0038
	#00A6	#0039
	#00A7	#0041
	#00A8	#0042
	#00A9	#0043
	#00AA	#0044
	#00AB	#0045
	#00AC	#0046
	#00AD	#0047
	#00AE	#0048
	#00AF	#0049
	#00B0	#004A
	#00B1	#004B
	#00B2	#004C
	#00B3	#004D
	#00B4	#004E
	#00B5	#004F
	#00B6	#0050
	#00B7	#0051
	#00B8	#0052
	#00B9	#0053
	#00BA	#0054
	#00BB	#0055
	#00BC	#0056
	#00BD	#0057
	#00BE	#0058
	#00BF	#0059
	#00C0	#005A
../../../../as/FUNC/outa.casl:   44:        END
../../../../as/FUNC/outa.casl:   45:;;; GR1の値とGR2の値の、商をGR0、剰余をGR3に格納する
../../../../as/FUNC/outa.casl:   46:;;; 0〜65535の範囲の数値を扱う
../../../../as/FUNC/outa.casl:   47:ODIVL   START
../../../../as/FUNC/outa.casl:   48:        PUSH    0,GR1
	#00C1	#7001
	#00C2	#0000
../../../../as/FUNC/outa.casl:   49:        PUSH    0,GR2
	#00C3	#7002
	#00C4	#0000
../../../../as/FUNC/outa.casl:   50:        PUSH    0,GR4
	#00C5	#7004
	#00C6	#0000
../../../../as/FUNC/outa.casl:   51:        AND     GR2,GR2         ; GR2が0の場合、ODFINへジャンプ
	#00C7	#3422
../../../../as/FUNC/outa.casl:   52:        JZE     ODFIN           ; ↓
	#00C8	#6300
	#00C9	#00F6
../../../../as/FUNC/outa.casl:   53:        ST      GR2,ODY         ; ODYにGR2の初期値を保存
	#00CA	#1120
	#00CB	#00FB
../../../../as/FUNC/outa.casl:   54:        LAD     GR0,0           ; GR0の初期化
	#00CC	#1200
	#00CD	#0000
../../../../as/FUNC/outa.casl:   55:        LAD     GR3,0           ; GR3の初期化
	#00CE	#1230
	#00CF	#0000
../../../../as/FUNC/outa.casl:   56:        LAD     GR4,1           ; GR4の初期化。対象ビットを表す
	#00D0	#1240
	#00D1	#0001
../../../../as/FUNC/outa.casl:   57:ODSL    CPL     GR2,GR1         ; ループ先頭。(GR2 > GR1)の場合、ODLOOPへループ脱出
	#00D2	#4521
../../../../as/FUNC/outa.casl:   58:        JPL     ODLOOP          ; ↓
	#00D3	#6500
	#00D4	#00E5
../../../../as/FUNC/outa.casl:   59:        SLL     GR4,1           ; GR4を1回左シフト
	#00D5	#5240
	#00D6	#0001
../../../../as/FUNC/outa.casl:   60:        SLL     GR2,1           ; GR2を1回左シフト
	#00D7	#5220
	#00D8	#0001
../../../../as/FUNC/outa.casl:   61:        JOV     ODYOV           ; オーバーフローの場合は、ODYOVにジャンプ
	#00D9	#6600
	#00DA	#00DD
../../../../as/FUNC/outa.casl:   62:        JUMP    ODSL            ; ループ終端
	#00DB	#6400
	#00DC	#00D2
../../../../as/FUNC/outa.casl:   63:ODYOV   SRL     GR2,1
	#00DD	#5320
	#00DE	#0001
../../../../as/FUNC/outa.casl:   64:        LAD     GR2,#8000,GR2
	#00DF	#1222
	#00E0	#8000
../../../../as/FUNC/outa.casl:   65:        SRL     GR4,1
	#00E1	#5340
	#00E2	#0001
../../../../as/FUNC/outa.casl:   66:        JUMP    ODLPIN
	#00E3	#6400
	#00E4	#00F2
../../../../as/FUNC/outa.casl:   67:ODLOOP  SRL     GR4,1           ; ループ先頭。GR4を1回右シフト
	#00E5	#5340
	#00E6	#0001
../../../../as/FUNC/outa.casl:   68:        JZE     ODFIN           ; (GR4 = 0)の場合、ループ脱出
	#00E7	#6300
	#00E8	#00F6
../../../../as/FUNC/outa.casl:   69:        SRL     GR2,1           ; GR2を1回右シフト
	#00E9	#5320
	#00EA	#0001
../../../../as/FUNC/outa.casl:   70:        CPL     GR1,ODY         ; (GR1 < ODY)の場合、ループ脱出
	#00EB	#4110
	#00EC	#00FB
../../../../as/FUNC/outa.casl:   71:        JMI     ODFIN           ; ↓
	#00ED	#6100
	#00EE	#00F6
../../../../as/FUNC/outa.casl:   72:        CPL     GR1,GR2         ; (GR1 < GR2)の場合、ループ先頭へジャンプ
	#00EF	#4512
../../../../as/FUNC/outa.casl:   73:        JMI     ODLOOP          ; ↓
	#00F0	#6100
	#00F1	#00E5
../../../../as/FUNC/outa.casl:   74:ODLPIN  SUBL    GR1,GR2         ; GR1 <- GR1 - GR2
	#00F2	#2712
../../../../as/FUNC/outa.casl:   75:        ADDL    GR0,GR4         ; GR0 <- GR0 + GR4
	#00F3	#2604
../../../../as/FUNC/outa.casl:   76:        JUMP    ODLOOP          ; ループ終端
	#00F4	#6400
	#00F5	#00E5
../../../../as/FUNC/outa.casl:   77:ODFIN   LD      GR3,GR1
	#00F6	#1431
../../../../as/FUNC/outa.casl:   78:        POP	GR4
	#00F7	#7140
../../../../as/FUNC/outa.casl:   79:        POP     GR2
	#00F8	#7120
../../../../as/FUNC/outa.casl:   80:        POP     GR1
	#00F9	#7110
../../../../as/FUNC/outa.casl:   81:        RET
	#00FA	#8100
../../../../as/FUNC/outa.casl:   82:ODY     DS      1        
	#00FB	#0000
../../../../as/FUNC/outa.casl:   83:        END
../../../../as/FUNC/outa.casl:   84:;; アドレスがGR1、長さがGR2の文字列を逆順に並べ替える
../../../../as/FUNC/outa.casl:   85:;; 例: 12345 -> 54321、54321- -> -12345
../../../../as/FUNC/outa.casl:   86:REV     START
../../../../as/FUNC/outa.casl:   87:        RPUSH
	#00FC	#7001
	#00FD	#0000
	#00FE	#7002
	#00FF	#0000
	#0100	#7003
	#0101	#0000
	#0102	#7004
	#0103	#0000
	#0104	#7005
	#0105	#0000
	#0106	#7006
	#0107	#0000
	#0108	#7007
	#0109	#0000
../../../../as/FUNC/outa.casl:   88:        LAD     GR3,0           ; GR3の初期化
	#010A	#1230
	#010B	#0000
../../../../as/FUNC/outa.casl:   89:RPU     CPL     GR3,GR2         ; ループ先頭。(GR3 = GR2)の場合、ループ脱出
	#010C	#4532
../../../../as/FUNC/outa.casl:   90:        JZE     RNEXT           ; ↓
	#010D	#6300
	#010E	#0119
../../../../as/FUNC/outa.casl:   91:        LD      GR4,GR1         ; GR4にGR1の値をコピー
	#010F	#1441
../../../../as/FUNC/outa.casl:   92:        ADDL    GR4,GR3         ; GR4 <- GR4 + GR3
	#0110	#2643
../../../../as/FUNC/outa.casl:   93:        LD      GR5,0,GR4       ; GR5にアドレスGR4の値を格納
	#0111	#1054
	#0112	#0000
../../../../as/FUNC/outa.casl:   94:        PUSH    0,GR5           ; GR5をプッシュ
	#0113	#7005
	#0114	#0000
../../../../as/FUNC/outa.casl:   95:        LAD     GR3,1,GR3       ; GR3 <- GR3 + 1
	#0115	#1233
	#0116	#0001
../../../../as/FUNC/outa.casl:   96:        JUMP    RPU             ; ループ終端
	#0117	#6400
	#0118	#010C
../../../../as/FUNC/outa.casl:   97:RNEXT   LAD     GR3,0           ; GR3の初期化
	#0119	#1230
	#011A	#0000
../../../../as/FUNC/outa.casl:   98:RPO     CPL     GR3,GR2         ; ループ先頭。(GR3 = GR2)の場合、ループ脱出
	#011B	#4532
../../../../as/FUNC/outa.casl:   99:        JZE     RFIN            ; ↓
	#011C	#6300
	#011D	#0127
../../../../as/FUNC/outa.casl:  100:        POP     GR5             ; GR5にポップ
	#011E	#7150
../../../../as/FUNC/outa.casl:  101:        LD      GR4,GR1         ; GR4にGR1の値をコピー
	#011F	#1441
../../../../as/FUNC/outa.casl:  102:        ADDL    GR4,GR3         ; GR4 <- GR4 + GR3
	#0120	#2643
../../../../as/FUNC/outa.casl:  103:        ST      GR5,0,GR4       ; アドレスGR4にGR5の値を格納
	#0121	#1154
	#0122	#0000
../../../../as/FUNC/outa.casl:  104:        LAD     GR3,1,GR3       ; GR3 <- GR3 + 1
	#0123	#1233
	#0124	#0001
../../../../as/FUNC/outa.casl:  105:        JUMP    RPO             ; ループ終端
	#0125	#6400
	#0126	#011B
../../../../as/FUNC/outa.casl:  106:RFIN    RPOP
	#0127	#7170
	#0128	#7160
	#0129	#7150
	#012A	#7140
	#012B	#7130
	#012C	#7120
	#012D	#7110
../../../../as/FUNC/outa.casl:  107:        RET
	#012E	#8100
../../../../as/FUNC/outa.casl:  108:        END
../../../../as/FUNC/outa.casl:  109:;; GR1の値を絶対値に変換する。GR1にはマイナスの数値が格納されていると想定。
../../../../as/FUNC/outa.casl:  110:;; 例: -10 -> 10, -20 -> 20
../../../../as/FUNC/outa.casl:  111:OABS    START
../../../../as/FUNC/outa.casl:  112:        XOR     GR1,=#FFFF      ; GR1の値を反転
	#0137	#FFFF
	#012F	#3210
	#0130	#0137
../../../../as/FUNC/outa.casl:  113:        LAD     GR1,1,GR1       ; GR1 <- GR1 + 1
	#0131	#1211
	#0132	#0001
../../../../as/FUNC/outa.casl:  114:        RET
	#0133	#8100
../../../../as/FUNC/outa.casl:  115:        END
12
12
1
1
32767
32767
0
-32768
