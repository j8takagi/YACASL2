;;; 0〜65535の範囲にある正数のかけ算（筆算方式）を行う
;;; 入力 GR1:被乗数 GR2:乗数
;;; 出力 GR0:積 GR3:オーバーフロー値
;;; 積が65535より大きい場合は、GR0は積の下位16ビットになり、オーバーフロー
MULL    START
        PUSH    0,GR1           ; 被乗数
        PUSH    0,GR2           ; 乗数
        PUSH    0,GR4           ; ビット位置を表す
        XOR     GR0,GR0         ; 積
        XOR     GR3,GR3         ; オーバーフロー値
        AND     GR1,GR1         ; (GR1 = 0)の場合、終了
        JZE     FIN             ; ↓
        AND     GR2,GR2         ; (GR2 = 0)の場合、終了
        JZE     FIN             ; ↓
        LAD     GR4,1           ; 対象ビット
LOOP    PUSH    0,GR4           ; ループ先頭。GR2のビット中でGR4が示すビットが0の場合、NEXTへジャンプ
        AND     GR4,GR2         ; ↓
        POP     GR4             ; ↓
        JZE     NEXT            ; ↓
        LD      GR3,GR1         ; GR3 <- GR1
        ADDL    GR0,GR1         ; GR0 <- GR0 + GR1
        JOV     FIN             ; GR0がオーバーフローした場合、ループ脱出
NEXT    SLL     GR4,1           ; GR4を1回左シフト
        AND     GR4,GR4         ; (GR4 = 0)の場合、ループ脱出
        JZE     FIN             ; ↓
        CPL     GR4,GR2         ; (GR4 > GR2)の場合、ループ脱出
        JPL     FIN             ; ↓
        SLL     GR1,1           ; GR1を1回左シフト
        JOV     FIN             ; GR1がオーバーフローした場合、ループ脱出
        JUMP    LOOP            ; ループ終端
FIN     POP     GR4
        POP     GR2
        POP     GR1
        RET
        END
